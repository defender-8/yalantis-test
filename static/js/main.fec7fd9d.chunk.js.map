{"version":3,"sources":["redux/reducer.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["initialState","employees","loading","errorMessage","actionTypes","reducer","state","action","type","payload","index","findIndex","e","id","isActive","EmployeesContext","createContext","App","useSelector","useState","JSON","parse","window","localStorage","getItem","activeEmployees","setActiveEmployees","activeEmployeesArrLength","Object","keys","length","dispatch","useDispatch","useEffect","a","axios","get","response","data","map","emp","includes","console","log","status","message","getEmployees","setItem","stringify","className","Provider","value","Employees","Birthdays","employeesAlphabetical","users","alphabetArr","Array","from","elem","i","x","String","fromCodePoint","usersAlphabeticalObj","forEach","letter","sort","sortObjectsBy","user","firstName","push","entries","getUsersAlphabetical","item","EmployeesLetterBlock","EmployeesList","EmployeesListItem","employee","lastName","dob","useContext","onChange","updateEmployee","name","checked","htmlFor","employeesByMonth","usersObj","months","currentMonthIndex","Date","getMonth","monthsFromCurrent","getMonths","usersByMonth","month","dobObject","yearOfBirth","getFullYear","monthOfBirth","dayOfBirth","getDate","dobFormatted","getUsersByMonth","MonthBirthdays","key","b","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fec7fd9d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst initialState = {\n  employees: null,\n  loading: true,\n  errorMessage: false,\n};\n\nconst actionTypes = {\n  GET_EMPLOYEES: \"GET_EMPLOYEES\",\n  UPDATE_EMPLOYEE: \"UPDATE_EMPLOYEE\",\n  GET_ERROR: \"GET_ERROR\",\n};\n\nexport const getEmployees = (activeEmployees) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\n      );\n      const employees = response.data.map((emp) => {\n        if (!activeEmployees.length) {\n          return { ...emp, isActive: false };\n        } else {\n          return {\n            ...emp,\n            isActive: activeEmployees.includes(emp.id),\n          };\n        }\n      });\n\n      dispatch({\n        type: actionTypes.GET_EMPLOYEES,\n        payload: employees,\n      });\n    } catch (err) {\n      console.log(\"err:\\n\", err);\n\n      let payload;\n\n      if (err.response.data) {\n        const { status, data } = err.response;\n        payload = `${status}: ${data}`;\n      } else {\n        payload = err.message;\n      }\n\n      dispatch({\n        type: actionTypes.GET_ERROR,\n        payload,\n      });\n    }\n  };\n};\n\nexport const updateEmployee = (employee) => {\n  return async (dispatch) => {\n    dispatch({\n      type: actionTypes.UPDATE_EMPLOYEE,\n      payload: employee,\n    });\n  };\n};\n\nfunction reducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.GET_EMPLOYEES:\n      return {\n        ...state,\n        loading: false,\n        employees: payload,\n      };\n    case actionTypes.UPDATE_EMPLOYEE:\n      const index = state.employees.findIndex((e) => e.id === payload.id);\n      state.employees[index].isActive = !payload.isActive;\n\n      return {\n        ...state,\n      };\n    case actionTypes.GET_ERROR:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { useState, useEffect, createContext, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getEmployees, updateEmployee } from \"./redux/reducer\";\n\nimport \"./App.css\";\n\nconst EmployeesContext = createContext();\n\nfunction App() {\n  const { employees, loading, errorMessage } = useSelector((state) => state);\n  const [activeEmployees, setActiveEmployees] = useState(\n    JSON.parse(window.localStorage.getItem(\"activeEmployees\")) || {}\n  );\n\n  const activeEmployeesArrLength = Object.keys(activeEmployees).length;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEmployees(Object.keys(activeEmployees)));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      \"activeEmployees\",\n      JSON.stringify(activeEmployees)\n    );\n  }, [activeEmployeesArrLength]);\n\n  return (\n    <div className=\"layout clearfix\">\n      {errorMessage ? (\n        <div className=\"error-message\">{errorMessage}</div>\n      ) : loading ? (\n        \"Loading...\"\n      ) : (\n        <EmployeesContext.Provider value={setActiveEmployees}>\n          <div className=\"layout-left\">\n            <Employees employees={employees} />\n          </div>\n          <div className=\"layout-right\">\n            <Birthdays activeEmployees={activeEmployees} />\n          </div>\n        </EmployeesContext.Provider>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// Components\n\nEmployees.propTypes = {\n  employees: PropTypes.array,\n};\n\nfunction Employees({ employees }) {\n  const employeesAlphabetical = getUsersAlphabetical(employees);\n\n  return (\n    <>\n      <h2>Employees</h2>\n      <div className=\"employees\">\n        {employeesAlphabetical.map((item) => {\n          return <EmployeesLetterBlock key={item.letter} item={item} />;\n        })}\n      </div>\n    </>\n  );\n}\n\nEmployeesLetterBlock.propTypes = {\n  item: PropTypes.object,\n};\n\nfunction EmployeesLetterBlock({ item: { letter, users } }) {\n  return (\n    <div className=\"employees-letter-block\">\n      <div className=\"employees-letter-block-title\">{letter}</div>\n      <EmployeesList employees={users} />\n    </div>\n  );\n}\n\nEmployeesList.propTypes = {\n  employees: PropTypes.array,\n};\n\nfunction EmployeesList({ employees }) {\n  return employees.length ? (\n    <ul className=\"employees-list\">\n      {employees.map((emp) => {\n        return <EmployeesListItem key={emp.id} employee={emp} />;\n      })}\n    </ul>\n  ) : (\n    <div className=\"employees-list-empty\">No Employees</div>\n  );\n}\n\nEmployeesListItem.propTypes = {\n  employee: PropTypes.object,\n};\n\nfunction EmployeesListItem({ employee }) {\n  const { id, firstName, lastName, dob, isActive } = employee;\n  const setActiveEmployees = useContext(EmployeesContext);\n\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(updateEmployee(employee));\n\n    if (!isActive) {\n      setActiveEmployees((state) => ({\n        ...state,\n        [id]: {\n          firstName,\n          lastName,\n          dob,\n        },\n      }));\n    } else {\n      setActiveEmployees((state) => {\n        delete state[id];\n        return state;\n      });\n    }\n  };\n\n  return (\n    <li className={`employees-list-item${isActive ? \" active\" : \"\"}`}>\n      <div className=\"employees-list-item-name\">{`${firstName} ${lastName}`}</div>\n      <form>\n        <div className=\"radio-item\">\n          <input\n            type=\"radio\"\n            id={`${id}notActive`}\n            name=\"status\"\n            value={false}\n            checked={!isActive}\n            onChange={onChange}\n          />\n          <label htmlFor={`${id}notActive`}>not active</label>\n        </div>\n        <div className=\"radio-item\">\n          <input\n            type=\"radio\"\n            id={`${id}active`}\n            name=\"status\"\n            value={true}\n            checked={isActive}\n            onChange={onChange}\n          />\n          <label htmlFor={`${id}active`}>active</label>\n        </div>\n      </form>\n    </li>\n  );\n}\n\nBirthdays.propTypes = {\n  activeEmployees: PropTypes.object,\n};\n\nfunction Birthdays({ activeEmployees }) {\n  const employeesByMonth = getUsersByMonth(activeEmployees);\n\n  return (\n    <>\n      <h2>Employees birthday</h2>\n      <div className=\"birthdays\">\n        {Object.keys(activeEmployees).length ? (\n          employeesByMonth.map((emp) => {\n            return (\n              <MonthBirthdays\n                key={emp.month}\n                month={emp.month}\n                employees={emp.users}\n              />\n            );\n          })\n        ) : (\n          <div className=\"birthdays-empty\">Employees List is empty</div>\n        )}\n      </div>\n    </>\n  );\n}\n\nMonthBirthdays.propTypes = {\n  month: PropTypes.string,\n  employees: PropTypes.array,\n};\n\nfunction MonthBirthdays({ month, employees }) {\n  return (\n    <div className=\"month-birthdays\">\n      <div className=\"month-birthdays-title\">{month}</div>\n      {employees.length ? (\n        <ul className=\"month-birthdays-list\">\n          {employees.map((emp) => {\n            return (\n              <li key={emp.id}>\n                {`${emp.lastName} ${emp.firstName} - ${emp.dob}`}\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"month-birthdays-empty\">No Employees</div>\n      )}\n    </div>\n  );\n}\n\n// Functions\nfunction sortObjectsBy(key) {\n  return (a, b) => (a[key] > b[key] ? 1 : -1);\n}\n\nfunction getUsersAlphabetical(users) {\n  const alphabetCodes = Array.from(Array(26)).map((elem, i) => i + 65);\n  const alphabetArr = alphabetCodes.map((x) => String.fromCodePoint(x));\n\n  const usersAlphabeticalObj = {};\n\n  alphabetArr.forEach((letter) => (usersAlphabeticalObj[letter] = []));\n\n  users\n    .sort(sortObjectsBy(\"firstName\"))\n    .forEach((user) => usersAlphabeticalObj[user.firstName[0]].push(user));\n\n  return Object.entries(usersAlphabeticalObj).map(([letter, users]) => ({\n    letter,\n    users,\n  }));\n}\n\nfunction getMonths() {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const currentDate = new Date();\n  const currentMonthIndex = currentDate.getMonth();\n  const monthsFromCurrent = [];\n\n  for (let i = currentMonthIndex; i < months.length; i++) {\n    monthsFromCurrent.push(months[i]);\n  }\n\n  for (let i = 0; i < currentMonthIndex; i++) {\n    monthsFromCurrent.push(months[i]);\n  }\n\n  return { months, monthsFromCurrent };\n}\n\nfunction getUsersByMonth(usersObj) {\n  const { months, monthsFromCurrent } = getMonths();\n  const usersByMonth = {};\n\n  monthsFromCurrent.map((month) => (usersByMonth[month] = []));\n\n  const usersArr = Object.entries(usersObj).map(([id, user]) => ({\n    id,\n    ...user,\n  }));\n\n  usersArr.sort(sortObjectsBy(\"lastName\")).forEach((user) => {\n    const dobObject = new Date(Date.parse(user.dob));\n    const yearOfBirth = dobObject.getFullYear();\n    const monthOfBirth = months[dobObject.getMonth()];\n    const dayOfBirth = dobObject.getDate();\n\n    const dobFormatted = `${dayOfBirth} ${monthOfBirth}, ${yearOfBirth} year`;\n\n    usersByMonth[monthOfBirth].push({ ...user, dob: dobFormatted });\n  });\n\n  return Object.entries(usersByMonth).map(([month, users]) => ({\n    month,\n    users,\n  }));\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./reducer\";\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}